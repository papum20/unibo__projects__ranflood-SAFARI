#!/bin/bash

dir_ansible=ansible

# variables
variables_checker=variables-checker.yml
variables_credentials=variables-credentials.generated.secret.yml
variables_vm_ids=variables-vm-ids.generated.yml
variables_vm_ips=variables-vm-ips.generated.yml
variables_vm_ids_user=variables-vm-ids.yml
variables_vm_ips_user=variables-vm-ips.yml

function usage() {
	echo "launch-ansible-checker: Launch the ansible playbooks for the filechecker."
	echo "	${variables_vm_ids}, ${variables_vm_ips} can be automatically generated by `scripts/launch-all.sh --checker` or `scripts/read-vms.sh terraform/checker`, from the terraform output;"
	echo "	however, if ${variables_vm_ids_user}, ${variables_vm_ips_user} are found, they are used instead."
	echo "Usage: $0 [-y]"
	echo "  -y: skip warning"
	echo ""
	echo "  Warning: this script will download a zipped ransomware."
	exit 1
}


# Check current dir

if [[ ! -d ${dir_ansible} ]]; then
	echo "Directory ${dir_ansible} not found. Make sure to run this command from the project's root directory."
	usage
else
	cd ${dir_ansible}
	pwd
fi

# Check args

if [[ -f "variables/${variables_vm_ids_user}" ]]; then
	variables_vm_ids=${variables_vm_ids_user}
fi

if [[ -f "variables/${variables_vm_ips_user}" ]]; then
	variables_vm_ips=${variables_vm_ips_user}
fi

## Required files
required_files=( \
	"checker/playbook.yml" \
	"checker/inventory" \
	"checker/${variables_checker}"
	"variables/variables-credentials.secret.sh"
)

for file in "${required_files[@]}"; do
    if [[ ! -f $file ]]; then
		echo "$file not found."
        usage
    fi
done


# Set variables

set -a

source variables/variables-credentials.secret.sh

sed -r 's/([^=]*)=.*/\1: '\''${\1}'\''/g' variables/variables-credentials.secret.sh | \
	## evaluate variables
 	envsubst > variables/${variables_credentials}


# Run ansible

ansible-playbook -i checker/inventory checker/playbook.yml \
	--extra-vars "checker/${variables_checker}" \
	--extra-vars "variables/${variables_credentials}" \
	--extra-vars "checker/${variables_vm_ids}" \
	--extra-vars "checker/${variables_vm_ips}"
